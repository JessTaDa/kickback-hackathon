type StatsEntity @entity {
  id: ID!
  dayGroup: Int
  blockNumber: Int
  timestamp: BigInt
  numIn: Int
  numOut: Int
  amountIn: BigInt
  amountInDai: BigInt
  amountOut: BigInt
  amountOutDai: BigInt
}

type MetaEntity @entity {
  id: ID!
  address: Bytes
  numDeployers: Int
  numParties: Int
  numParticipants: Int
  numMoneyTransactions: Int
  limitOfParticipants: Int
}

type  PartyEntity @entity {
  id: ID!
  address: Bytes
  name: String
  deposit: BigInt
  limitOfParticipants: Int
  coolingPeriod: Int
  tokenAddress: Bytes
  numMoneyTransactions: Int
}

type MoneyEntity @entity{
  id: ID!
  partyAddress: Bytes
  userAddress: Bytes
  tokenAddress: Bytes
  amount: BigInt
  direction: String
  blockNumber: Int
  timestamp: BigInt
}

type OwnershipTransferredEntity @entity{
  id: ID!
  senderAddress: Bytes
  recipientAddress: Bytes
  tokenAddress: Bytes
  amount: BigInt
  timestamp: BigInt
}

type RegisterEventEntity @entity{
  id: ID!
  address: Bytes
  index: BigInt
  timestamp: BigInt
}

type WithdrawEventEntity @entity{
  id: ID!
  address: Bytes
  payout: BigInt
  timestamp: BigInt
}

type UpdateParticipantLimitEntity @entity{
  id: ID!
  limit: BigInt
  timestamp: BigInt
}

type FinalizeEventEntity @entity{
  id: ID!
  maps: [BigInt!]!
  payout: BigInt!
  endedAt: BigInt!
  timestamp: BigInt
}
